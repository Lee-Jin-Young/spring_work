<?xml version="1.0" encoding="UTF-8"?>
<beans:beans
	xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing 
		infrastructure -->

	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />

	<!-- Handles HTTP GET requests for /resources/** by efficiently serving 
		up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources 
		in the /WEB-INF/views directory -->
	<beans:bean
		class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>

	<!-- Multipart 폼 전송 처리를 위한 bean 설정 최대 업로드 사이즈 제한하기 name="maxUploadSize" 
		value="byte단위" id를 multipartResolver로 명시해야 동작 -->
	<beans:bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<beans:property name="maxUploadSize" value="1024000000"/>
	</beans:bean>


	<!-- MyBatis기반 DB연동 설정 -->
	<beans:bean id="dataSource"
		class="org.springframework.jndi.JndiObjectFactoryBean">
		<beans:property name="jndiName"
			value="java:comp/env/jdbc/myoracle" />
	</beans:bean>
	<beans:bean id="sqlSessionFactory"
		class="org.mybatis.spring.SqlSessionFactoryBean">
		<beans:property name="dataSource" ref="dataSource" />
		<beans:property name="configLocation"
			value="classpath:Configuration.xml" />
	</beans:bean>
	<beans:bean id="sqlSessionTemplate"
		class="org.mybatis.spring.SqlSessionTemplate">
		<beans:constructor-arg name="sqlSessionFactory"
			ref="sqlSessionFactory" />
	</beans:bean>

	<context:component-scan
		base-package="com.young.spring04" />

	<!-- 로그인 인터셉터를 bean 으로 만들고 -->
	<beans:bean id="loginInterceptor"
		class="com.young.spring04.interceptor.LoginInterceptor" />
	<!-- 인터셉터 맵핑하기 -->
	<interceptors>
		<interceptor>
			<mapping path="/users/*"/>
			<mapping path="/file/*"/>
			<exclude-mapping path="/users/signup_form" />
			<exclude-mapping path="/users/signup" />
			<exclude-mapping path="/users/login_form" />                                                        
			<exclude-mapping path="/users/login" />
			<exclude-mapping path="/file/list"/>
			<beans:ref bean="loginInterceptor" />
		</interceptor>
	</interceptors> 
	
	<!-- 
		bean의 이름을 이용해서 view 로 이동할수 있도록 설정 
		setOrder(0)는 0순위로 찾아 가겠다는 의미 
		없으면 views 폴더 안에서 jsp 페이지를 찾게 된다. 	
	-->
	<beans:bean class="org.springframework.web.servlet.view.BeanNameViewResolver">
		<beans:property name="order" value="0"/>
	</beans:bean>

</beans:beans>
